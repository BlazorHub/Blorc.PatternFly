@using System
@using System.Linq
@using Blorc.Reflection
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web
@using Blorc.PatternFly.Components.Dropdown
@using Blorc.PatternFly.Layouts
@using Blorc.PatternFly.Components.Icon
@using Blorc.PatternFly.Components.Text
@using Blorc.PatternFly.Helpers

@inherits TableComponent

    <CascadingValue Value=this>
        <table class="pf-c-table pf-m-grid-md">
            @if (string.IsNullOrWhiteSpace(Caption))
            {
                <caption>@Caption</caption>
            }
            <thead>
                @if (Header != null)
                {
                    @Header
                }
                else
                {
                    if (ColumnDefinitions != null && ColumnDefinitions.Count > 0)
                    {
                        <Row>
                            @foreach (var columnDefinition in ColumnDefinitions.OrderBy(pair => pair.Value.Idx).Select(pair => pair.Value))
                            {
                                if (columnDefinition is ActionColumnDefinition)
                                {
                                    <ActionColumn Label="@columnDefinition.Label" Key="@columnDefinition.Key" Idx="@columnDefinition.Idx" />
                                }
                                else
                                {
                                    <Column Label="@columnDefinition.Label" Key="@columnDefinition.Key" Idx="@columnDefinition.Idx" />
                                }
                            }
                        </Row>
                    }
                }
            </thead>
            <tbody>
                @if (Body != null)
                {
                    @Body
                }
                else
                {
                    if (Records != null && ColumnDefinitions != null)
                    {
                        bool noRows = true;
                        foreach (var record in Records)
                        {
                            var columnsWithPredicate = ColumnDefinitions.Where(pair => pair.Value.FilterPredicate != null).ToList();
                            if (columnsWithPredicate.Count <= 0 || columnsWithPredicate.Select(pair => pair.Value).Any(definition => definition.FilterPredicate(DataHelper.GetValue(record, definition.Key))))
                            {
                                <Row Record="@record" />
                                noRows = false;
                            }
                        }

                        if (noRows && NoRowsContent != null)
                        {
                            <tr class="pf-m-height-auto">
                                <td colspan="@ColumnDefinitions.Count">
                                    <Bullseye>
                                        @NoRowsContent
                                    </Bullseye>
                                </td>
                            </tr>
                        }
                    }
                }
            </tbody>
        </table>
    </CascadingValue>