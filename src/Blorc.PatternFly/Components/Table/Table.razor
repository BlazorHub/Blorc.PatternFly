@using System
@using System.Linq
@using Blorc.Reflection
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web
@using Blorc.PatternFly.Components.Dropdown

@inherits TableComponent

<CascadingValue Value=this>
    <table class="pf-c-table pf-m-grid-md">
        @if (string.IsNullOrWhiteSpace(Caption))
        {
            <caption>@Caption</caption>
        }
        <thead>
            @if (Header != null)
            {
                @Header
            }
            else
            {
                if (ColumnDefinitions != null && ColumnDefinitions.Count > 0)
                {
                    <Row>
                        @foreach (var columnDefinition in ColumnDefinitions.OrderBy(pair => pair.Value.Idx).Select(pair => pair.Value))
                        {
                            if (columnDefinition is ActionColumnDefinition)
                            {
                                <ActionColumn Label="@columnDefinition.Label" Key="@columnDefinition.Key" Idx="@columnDefinition.Idx" />
                            }
                            else
                            {
                                <Column Label="@columnDefinition.Label" Key="@columnDefinition.Key" Idx="@columnDefinition.Idx" />
                            }
                        }
                    </Row>
                }
            }
        </thead>
        <tbody>
            @if (Body != null)
            {
                @Body
            }
            else
            {
                if (Records != null && ColumnDefinitions != null)
                {
                    foreach (var record in Records)
                    {
                        <Row>
                            @foreach (var columnDefinition in ColumnDefinitions.OrderBy(pair => pair.Value.Idx).Select(pair => pair.Value))
                            {
                                if (columnDefinition is ActionColumnDefinition actionColumnDefinition)
                                {
                                    <ActionCell>
                                        <Dropdown IsPlain="true" Position="@DropdownPosition.Right">
                                            <Toggle>
                                                <KebabToggle />
                                            </Toggle>
                                            <Items>
                                                @if (actionColumnDefinition.ActionSource != null)
                                                {
                                                    foreach (var action in actionColumnDefinition.ActionSource(record))
                                                    {
                                                        @if (action is SeparatorActionDefinition)
                                                        {
                                                            <Separator Key="separator" />
                                                        }
                                                        else if (action is CallActionDefinition callActionDefinition)
                                                        {
                                                            <DropdownItem Key="@callActionDefinition.Key" OnClick=@((s, e)=> callActionDefinition.Action(record)) IsDisabled="@callActionDefinition.IsDisabled">@callActionDefinition.Label</DropdownItem>
                                                        }
                                                    }
                                                }
                                            </Items>
                                        </Dropdown>
                                    </ActionCell>
                                }
                                else
                                {
                                    <Cell Label="@columnDefinition.Label" Key="@columnDefinition.Key" Value="@PropertyHelper.GetPropertyValue(record, columnDefinition.Key)?.ToString()" />
                                }
                            }
                        </Row>
                    }
                }
            }
        </tbody>
    </table>
</CascadingValue>