@using System.Linq
@using Blorc.PatternFly.Components.Dropdown
@using Blorc.PatternFly.Helpers
@using Blorc.Reflection
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web

@inherits RowComponent


    @if (ChildContent != null)
    {
        <tr class="@Class">
            @ChildContent
        </tr>
    }
    else if (ContainerTable != null && Record != null)
    {
        <tr class="@Class">
            @foreach (var columnDefinition in ContainerTable.ColumnDefinitions.OrderBy(pair => pair.Value.Idx).Select(pair => pair.Value))
            {
                if (columnDefinition is ActionColumnDefinition actionColumnDefinition)
                {
                    <ActionCell>
                        <Dropdown IsPlain="true" Position="@DropdownPosition.Right">
                            <Toggle>
                                <KebabToggle />
                            </Toggle>
                            <Items>
                                @if (actionColumnDefinition.ActionSource != null)
                                {
                                    foreach (var action in actionColumnDefinition.ActionSource(Record))
                                    {
                                        @if (action is SeparatorActionDefinition)
                                        {
                                            <Separator Key="separator" />
                                        }
                                        else if (action is CallActionDefinition callActionDefinition)
                                        {
                                            <DropdownItem Key="@callActionDefinition.Key" OnClick=@((s, e)=> callActionDefinition.Action(Record)) IsDisabled="@callActionDefinition.IsDisabled">@callActionDefinition.Label</DropdownItem>
                                        }
                                    }
                                }
                            </Items>
                        </Dropdown>
                    </ActionCell>
                }
                else
                {
                    <Cell Label="@columnDefinition.Label" Key="@columnDefinition.Key" Value="@DataHelper.GetValue(Record, columnDefinition.Key)?.ToString()" />
                }
            }
         </tr>
    }